# Generated by Django 3.1 on 2020-08-29 18:00

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0004_auto_20200829_0928'),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_type', models.CharField(default='Answer', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='FSM',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='FSMPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_type', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Widget',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.IntegerField()),
                ('widget_type', models.CharField(max_length=20)),
                ('page', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='widget', to='fsm.fsmpage')),
            ],
        ),
        migrations.CreateModel(
            name='Description',
            fields=[
                ('widget_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fsm.widget')),
                ('text', models.TextField()),
            ],
            bases=('fsm.widget',),
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('widget_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fsm.widget')),
                ('name', models.CharField(max_length=100)),
                ('link', models.TextField()),
                ('answer', models.TextField()),
            ],
            bases=('fsm.widget',),
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('widget_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fsm.widget')),
                ('name', models.CharField(max_length=100)),
                ('text', models.TextField()),
            ],
            bases=('fsm.widget',),
        ),
        migrations.CreateModel(
            name='TeamHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.IntegerField(default=0)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('state', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='histories', to='accounts.participant')),
                ('team', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='histories', to='accounts.team')),
            ],
        ),
        migrations.CreateModel(
            name='SubmitedAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publish_date', models.DateTimeField(blank=True, null=True)),
                ('answer', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='fsm.answer')),
                ('participant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='submited_answers', to='accounts.participant')),
                ('team_history', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='fsm.teamhistory')),
            ],
        ),
        migrations.CreateModel(
            name='FSMState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('fsm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='states', to='fsm.fsm')),
                ('page', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='state', to='fsm.fsmpage')),
            ],
        ),
        migrations.CreateModel(
            name='FSMEdge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.IntegerField()),
                ('head', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inward_edges', to='fsm.fsmstate')),
                ('tail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outward_edges', to='fsm.fsmstate')),
            ],
        ),
        migrations.CreateModel(
            name='Ability',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('value', models.BooleanField()),
                ('edge', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='abilities', to='fsm.fsmedge')),
                ('team_history', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='abilities', to='fsm.teamhistory')),
            ],
        ),
        migrations.CreateModel(
            name='ProblemBigAnswer',
            fields=[
                ('problem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fsm.problem')),
            ],
            bases=('fsm.problem',),
        ),
        migrations.CreateModel(
            name='ProblemMultiChoice',
            fields=[
                ('problem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fsm.problem')),
            ],
            bases=('fsm.problem',),
        ),
        migrations.CreateModel(
            name='ProblemSmallAnswer',
            fields=[
                ('problem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fsm.problem')),
            ],
            bases=('fsm.problem',),
        ),
        migrations.CreateModel(
            name='SmallAnswer',
            fields=[
                ('answer_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fsm.answer')),
                ('text', models.TextField()),
                ('problem', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='answer', to='fsm.problemsmallanswer')),
            ],
            bases=('fsm.answer',),
        ),
        migrations.CreateModel(
            name='MultiChoiceAnswer',
            fields=[
                ('answer_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fsm.answer')),
                ('text', models.IntegerField()),
                ('problem', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='answer', to='fsm.problemmultichoice')),
            ],
            bases=('fsm.answer',),
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('problem', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='choices', to='fsm.problemmultichoice')),
            ],
        ),
        migrations.CreateModel(
            name='BigAnswer',
            fields=[
                ('answer_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fsm.answer')),
                ('text', models.TextField()),
                ('problem', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='answer', to='fsm.problembiganswer')),
            ],
            bases=('fsm.answer',),
        ),
    ]
