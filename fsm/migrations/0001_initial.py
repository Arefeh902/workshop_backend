# Generated by Django 3.0.8 on 2020-11-07 17:46

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_type', models.CharField(default='Answer', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='FSM',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('active', models.BooleanField(default=False)),
                ('fsm_learning_type', models.CharField(choices=[('withMentor', 'Withmentor'), ('noMentor', 'Nomentor')], default='noMentor', max_length=40)),
                ('fsm_p_type', models.CharField(choices=[('team', 'Team'), ('individual', 'Individual'), ('hybrid', 'Hybrid')], default='hybrid', max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='FSMEdge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.IntegerField()),
                ('text', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FSMState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('fsm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='states', to='fsm.FSM')),
            ],
        ),
        migrations.CreateModel(
            name='Widget',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.IntegerField()),
                ('widget_type', models.CharField(max_length=20)),
                ('state', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='widget', to='fsm.FSMState')),
            ],
        ),
        migrations.CreateModel(
            name='Description',
            fields=[
                ('widget_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fsm.Widget')),
                ('text', models.TextField()),
            ],
            bases=('fsm.widget',),
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('widget_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fsm.Widget')),
                ('name', models.CharField(max_length=100, null=True)),
                ('link', models.TextField()),
            ],
            bases=('fsm.widget',),
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('widget_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fsm.Widget')),
                ('name', models.CharField(max_length=100, null=True)),
                ('link', models.TextField()),
            ],
            bases=('fsm.widget',),
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('widget_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fsm.Widget')),
                ('name', models.CharField(max_length=100, null=True)),
                ('text', models.TextField()),
            ],
            bases=('fsm.widget',),
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('widget_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fsm.Widget')),
                ('name', models.CharField(max_length=100, null=True)),
                ('link', models.TextField()),
            ],
            bases=('fsm.widget',),
        ),
        migrations.CreateModel(
            name='TeamHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.IntegerField(default=0)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('edge', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='fsm.FSMEdge')),
                ('state', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='team_histories', to='fsm.FSMState')),
                ('team', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='histories', to='accounts.Team')),
            ],
        ),
        migrations.AddField(
            model_name='fsmedge',
            name='head',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inward_edges', to='fsm.FSMState'),
        ),
        migrations.AddField(
            model_name='fsmedge',
            name='tail',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outward_edges', to='fsm.FSMState'),
        ),
        migrations.AddField(
            model_name='fsm',
            name='first_state',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='my_fsm', to='fsm.FSMState'),
        ),
        migrations.CreateModel(
            name='Ability',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('value', models.BooleanField()),
                ('edge', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='abilities', to='fsm.FSMEdge')),
                ('team_history', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='abilities', to='fsm.TeamHistory')),
            ],
        ),
        migrations.CreateModel(
            name='ProblemBigAnswer',
            fields=[
                ('problem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fsm.Problem')),
            ],
            bases=('fsm.problem',),
        ),
        migrations.CreateModel(
            name='ProblemMultiChoice',
            fields=[
                ('problem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fsm.Problem')),
            ],
            bases=('fsm.problem',),
        ),
        migrations.CreateModel(
            name='ProblemSmallAnswer',
            fields=[
                ('problem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fsm.Problem')),
            ],
            bases=('fsm.problem',),
        ),
        migrations.CreateModel(
            name='ProblemUploadFileAnswer',
            fields=[
                ('problem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fsm.Problem')),
            ],
            bases=('fsm.problem',),
        ),
        migrations.CreateModel(
            name='SubmitedAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publish_date', models.DateTimeField(blank=True, null=True)),
                ('answer', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='fsm.Answer')),
                ('participant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='submited_answers', to='accounts.Participant')),
                ('team_history', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='fsm.TeamHistory')),
                ('problem', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='submited_answers', to='fsm.Problem')),
            ],
        ),
        migrations.CreateModel(
            name='UploadFileAnswer',
            fields=[
                ('answer_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fsm.Answer')),
                ('answer_file', models.FileField(max_length=4000, upload_to='AnswerFile')),
                ('problem', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='answer', to='fsm.ProblemUploadFileAnswer')),
            ],
            bases=('fsm.answer',),
        ),
        migrations.CreateModel(
            name='SmallAnswer',
            fields=[
                ('answer_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fsm.Answer')),
                ('text', models.TextField()),
                ('problem', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='answer', to='fsm.ProblemSmallAnswer')),
            ],
            bases=('fsm.answer',),
        ),
        migrations.CreateModel(
            name='MultiChoiceAnswer',
            fields=[
                ('answer_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fsm.Answer')),
                ('text', models.IntegerField()),
                ('problem', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='answer', to='fsm.ProblemMultiChoice')),
            ],
            bases=('fsm.answer',),
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('problem', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='choices', to='fsm.ProblemMultiChoice')),
            ],
        ),
        migrations.CreateModel(
            name='BigAnswer',
            fields=[
                ('answer_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fsm.Answer')),
                ('text', models.TextField()),
                ('problem', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='answer', to='fsm.ProblemBigAnswer')),
            ],
            bases=('fsm.answer',),
        ),
    ]
